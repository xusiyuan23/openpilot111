#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3969893128517011236) {
   out_3969893128517011236[0] = 0;
   out_3969893128517011236[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3969893128517011236[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3969893128517011236[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3969893128517011236[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3969893128517011236[5] = -sin(in_vec[1]);
   out_3969893128517011236[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3969893128517011236[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3969893128517011236[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3969893128517011236[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3969893128517011236[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3969893128517011236[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3969893128517011236[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3969893128517011236[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3969893128517011236[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3969893128517011236[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3969893128517011236[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3969893128517011236[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1006419718300617568) {
   out_1006419718300617568[0] = delta_x[0] + nom_x[0];
   out_1006419718300617568[1] = delta_x[1] + nom_x[1];
   out_1006419718300617568[2] = delta_x[2] + nom_x[2];
   out_1006419718300617568[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1006419718300617568[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1006419718300617568[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1006419718300617568[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1006419718300617568[7] = delta_x[6] + nom_x[7];
   out_1006419718300617568[8] = delta_x[7] + nom_x[8];
   out_1006419718300617568[9] = delta_x[8] + nom_x[9];
   out_1006419718300617568[10] = delta_x[9] + nom_x[10];
   out_1006419718300617568[11] = delta_x[10] + nom_x[11];
   out_1006419718300617568[12] = delta_x[11] + nom_x[12];
   out_1006419718300617568[13] = delta_x[12] + nom_x[13];
   out_1006419718300617568[14] = delta_x[13] + nom_x[14];
   out_1006419718300617568[15] = delta_x[14] + nom_x[15];
   out_1006419718300617568[16] = delta_x[15] + nom_x[16];
   out_1006419718300617568[17] = delta_x[16] + nom_x[17];
   out_1006419718300617568[18] = delta_x[17] + nom_x[18];
   out_1006419718300617568[19] = delta_x[18] + nom_x[19];
   out_1006419718300617568[20] = delta_x[19] + nom_x[20];
   out_1006419718300617568[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8817840190981899676) {
   out_8817840190981899676[0] = -nom_x[0] + true_x[0];
   out_8817840190981899676[1] = -nom_x[1] + true_x[1];
   out_8817840190981899676[2] = -nom_x[2] + true_x[2];
   out_8817840190981899676[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8817840190981899676[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8817840190981899676[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8817840190981899676[6] = -nom_x[7] + true_x[7];
   out_8817840190981899676[7] = -nom_x[8] + true_x[8];
   out_8817840190981899676[8] = -nom_x[9] + true_x[9];
   out_8817840190981899676[9] = -nom_x[10] + true_x[10];
   out_8817840190981899676[10] = -nom_x[11] + true_x[11];
   out_8817840190981899676[11] = -nom_x[12] + true_x[12];
   out_8817840190981899676[12] = -nom_x[13] + true_x[13];
   out_8817840190981899676[13] = -nom_x[14] + true_x[14];
   out_8817840190981899676[14] = -nom_x[15] + true_x[15];
   out_8817840190981899676[15] = -nom_x[16] + true_x[16];
   out_8817840190981899676[16] = -nom_x[17] + true_x[17];
   out_8817840190981899676[17] = -nom_x[18] + true_x[18];
   out_8817840190981899676[18] = -nom_x[19] + true_x[19];
   out_8817840190981899676[19] = -nom_x[20] + true_x[20];
   out_8817840190981899676[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6477212205675135460) {
   out_6477212205675135460[0] = 1.0;
   out_6477212205675135460[1] = 0;
   out_6477212205675135460[2] = 0;
   out_6477212205675135460[3] = 0;
   out_6477212205675135460[4] = 0;
   out_6477212205675135460[5] = 0;
   out_6477212205675135460[6] = 0;
   out_6477212205675135460[7] = 0;
   out_6477212205675135460[8] = 0;
   out_6477212205675135460[9] = 0;
   out_6477212205675135460[10] = 0;
   out_6477212205675135460[11] = 0;
   out_6477212205675135460[12] = 0;
   out_6477212205675135460[13] = 0;
   out_6477212205675135460[14] = 0;
   out_6477212205675135460[15] = 0;
   out_6477212205675135460[16] = 0;
   out_6477212205675135460[17] = 0;
   out_6477212205675135460[18] = 0;
   out_6477212205675135460[19] = 0;
   out_6477212205675135460[20] = 0;
   out_6477212205675135460[21] = 0;
   out_6477212205675135460[22] = 1.0;
   out_6477212205675135460[23] = 0;
   out_6477212205675135460[24] = 0;
   out_6477212205675135460[25] = 0;
   out_6477212205675135460[26] = 0;
   out_6477212205675135460[27] = 0;
   out_6477212205675135460[28] = 0;
   out_6477212205675135460[29] = 0;
   out_6477212205675135460[30] = 0;
   out_6477212205675135460[31] = 0;
   out_6477212205675135460[32] = 0;
   out_6477212205675135460[33] = 0;
   out_6477212205675135460[34] = 0;
   out_6477212205675135460[35] = 0;
   out_6477212205675135460[36] = 0;
   out_6477212205675135460[37] = 0;
   out_6477212205675135460[38] = 0;
   out_6477212205675135460[39] = 0;
   out_6477212205675135460[40] = 0;
   out_6477212205675135460[41] = 0;
   out_6477212205675135460[42] = 0;
   out_6477212205675135460[43] = 0;
   out_6477212205675135460[44] = 1.0;
   out_6477212205675135460[45] = 0;
   out_6477212205675135460[46] = 0;
   out_6477212205675135460[47] = 0;
   out_6477212205675135460[48] = 0;
   out_6477212205675135460[49] = 0;
   out_6477212205675135460[50] = 0;
   out_6477212205675135460[51] = 0;
   out_6477212205675135460[52] = 0;
   out_6477212205675135460[53] = 0;
   out_6477212205675135460[54] = 0;
   out_6477212205675135460[55] = 0;
   out_6477212205675135460[56] = 0;
   out_6477212205675135460[57] = 0;
   out_6477212205675135460[58] = 0;
   out_6477212205675135460[59] = 0;
   out_6477212205675135460[60] = 0;
   out_6477212205675135460[61] = 0;
   out_6477212205675135460[62] = 0;
   out_6477212205675135460[63] = 0;
   out_6477212205675135460[64] = 0;
   out_6477212205675135460[65] = 0;
   out_6477212205675135460[66] = -0.5*state[4];
   out_6477212205675135460[67] = -0.5*state[5];
   out_6477212205675135460[68] = -0.5*state[6];
   out_6477212205675135460[69] = 0;
   out_6477212205675135460[70] = 0;
   out_6477212205675135460[71] = 0;
   out_6477212205675135460[72] = 0;
   out_6477212205675135460[73] = 0;
   out_6477212205675135460[74] = 0;
   out_6477212205675135460[75] = 0;
   out_6477212205675135460[76] = 0;
   out_6477212205675135460[77] = 0;
   out_6477212205675135460[78] = 0;
   out_6477212205675135460[79] = 0;
   out_6477212205675135460[80] = 0;
   out_6477212205675135460[81] = 0;
   out_6477212205675135460[82] = 0;
   out_6477212205675135460[83] = 0;
   out_6477212205675135460[84] = 0;
   out_6477212205675135460[85] = 0;
   out_6477212205675135460[86] = 0;
   out_6477212205675135460[87] = 0.5*state[3];
   out_6477212205675135460[88] = 0.5*state[6];
   out_6477212205675135460[89] = -0.5*state[5];
   out_6477212205675135460[90] = 0;
   out_6477212205675135460[91] = 0;
   out_6477212205675135460[92] = 0;
   out_6477212205675135460[93] = 0;
   out_6477212205675135460[94] = 0;
   out_6477212205675135460[95] = 0;
   out_6477212205675135460[96] = 0;
   out_6477212205675135460[97] = 0;
   out_6477212205675135460[98] = 0;
   out_6477212205675135460[99] = 0;
   out_6477212205675135460[100] = 0;
   out_6477212205675135460[101] = 0;
   out_6477212205675135460[102] = 0;
   out_6477212205675135460[103] = 0;
   out_6477212205675135460[104] = 0;
   out_6477212205675135460[105] = 0;
   out_6477212205675135460[106] = 0;
   out_6477212205675135460[107] = 0;
   out_6477212205675135460[108] = -0.5*state[6];
   out_6477212205675135460[109] = 0.5*state[3];
   out_6477212205675135460[110] = 0.5*state[4];
   out_6477212205675135460[111] = 0;
   out_6477212205675135460[112] = 0;
   out_6477212205675135460[113] = 0;
   out_6477212205675135460[114] = 0;
   out_6477212205675135460[115] = 0;
   out_6477212205675135460[116] = 0;
   out_6477212205675135460[117] = 0;
   out_6477212205675135460[118] = 0;
   out_6477212205675135460[119] = 0;
   out_6477212205675135460[120] = 0;
   out_6477212205675135460[121] = 0;
   out_6477212205675135460[122] = 0;
   out_6477212205675135460[123] = 0;
   out_6477212205675135460[124] = 0;
   out_6477212205675135460[125] = 0;
   out_6477212205675135460[126] = 0;
   out_6477212205675135460[127] = 0;
   out_6477212205675135460[128] = 0;
   out_6477212205675135460[129] = 0.5*state[5];
   out_6477212205675135460[130] = -0.5*state[4];
   out_6477212205675135460[131] = 0.5*state[3];
   out_6477212205675135460[132] = 0;
   out_6477212205675135460[133] = 0;
   out_6477212205675135460[134] = 0;
   out_6477212205675135460[135] = 0;
   out_6477212205675135460[136] = 0;
   out_6477212205675135460[137] = 0;
   out_6477212205675135460[138] = 0;
   out_6477212205675135460[139] = 0;
   out_6477212205675135460[140] = 0;
   out_6477212205675135460[141] = 0;
   out_6477212205675135460[142] = 0;
   out_6477212205675135460[143] = 0;
   out_6477212205675135460[144] = 0;
   out_6477212205675135460[145] = 0;
   out_6477212205675135460[146] = 0;
   out_6477212205675135460[147] = 0;
   out_6477212205675135460[148] = 0;
   out_6477212205675135460[149] = 0;
   out_6477212205675135460[150] = 0;
   out_6477212205675135460[151] = 0;
   out_6477212205675135460[152] = 0;
   out_6477212205675135460[153] = 1.0;
   out_6477212205675135460[154] = 0;
   out_6477212205675135460[155] = 0;
   out_6477212205675135460[156] = 0;
   out_6477212205675135460[157] = 0;
   out_6477212205675135460[158] = 0;
   out_6477212205675135460[159] = 0;
   out_6477212205675135460[160] = 0;
   out_6477212205675135460[161] = 0;
   out_6477212205675135460[162] = 0;
   out_6477212205675135460[163] = 0;
   out_6477212205675135460[164] = 0;
   out_6477212205675135460[165] = 0;
   out_6477212205675135460[166] = 0;
   out_6477212205675135460[167] = 0;
   out_6477212205675135460[168] = 0;
   out_6477212205675135460[169] = 0;
   out_6477212205675135460[170] = 0;
   out_6477212205675135460[171] = 0;
   out_6477212205675135460[172] = 0;
   out_6477212205675135460[173] = 0;
   out_6477212205675135460[174] = 0;
   out_6477212205675135460[175] = 1.0;
   out_6477212205675135460[176] = 0;
   out_6477212205675135460[177] = 0;
   out_6477212205675135460[178] = 0;
   out_6477212205675135460[179] = 0;
   out_6477212205675135460[180] = 0;
   out_6477212205675135460[181] = 0;
   out_6477212205675135460[182] = 0;
   out_6477212205675135460[183] = 0;
   out_6477212205675135460[184] = 0;
   out_6477212205675135460[185] = 0;
   out_6477212205675135460[186] = 0;
   out_6477212205675135460[187] = 0;
   out_6477212205675135460[188] = 0;
   out_6477212205675135460[189] = 0;
   out_6477212205675135460[190] = 0;
   out_6477212205675135460[191] = 0;
   out_6477212205675135460[192] = 0;
   out_6477212205675135460[193] = 0;
   out_6477212205675135460[194] = 0;
   out_6477212205675135460[195] = 0;
   out_6477212205675135460[196] = 0;
   out_6477212205675135460[197] = 1.0;
   out_6477212205675135460[198] = 0;
   out_6477212205675135460[199] = 0;
   out_6477212205675135460[200] = 0;
   out_6477212205675135460[201] = 0;
   out_6477212205675135460[202] = 0;
   out_6477212205675135460[203] = 0;
   out_6477212205675135460[204] = 0;
   out_6477212205675135460[205] = 0;
   out_6477212205675135460[206] = 0;
   out_6477212205675135460[207] = 0;
   out_6477212205675135460[208] = 0;
   out_6477212205675135460[209] = 0;
   out_6477212205675135460[210] = 0;
   out_6477212205675135460[211] = 0;
   out_6477212205675135460[212] = 0;
   out_6477212205675135460[213] = 0;
   out_6477212205675135460[214] = 0;
   out_6477212205675135460[215] = 0;
   out_6477212205675135460[216] = 0;
   out_6477212205675135460[217] = 0;
   out_6477212205675135460[218] = 0;
   out_6477212205675135460[219] = 1.0;
   out_6477212205675135460[220] = 0;
   out_6477212205675135460[221] = 0;
   out_6477212205675135460[222] = 0;
   out_6477212205675135460[223] = 0;
   out_6477212205675135460[224] = 0;
   out_6477212205675135460[225] = 0;
   out_6477212205675135460[226] = 0;
   out_6477212205675135460[227] = 0;
   out_6477212205675135460[228] = 0;
   out_6477212205675135460[229] = 0;
   out_6477212205675135460[230] = 0;
   out_6477212205675135460[231] = 0;
   out_6477212205675135460[232] = 0;
   out_6477212205675135460[233] = 0;
   out_6477212205675135460[234] = 0;
   out_6477212205675135460[235] = 0;
   out_6477212205675135460[236] = 0;
   out_6477212205675135460[237] = 0;
   out_6477212205675135460[238] = 0;
   out_6477212205675135460[239] = 0;
   out_6477212205675135460[240] = 0;
   out_6477212205675135460[241] = 1.0;
   out_6477212205675135460[242] = 0;
   out_6477212205675135460[243] = 0;
   out_6477212205675135460[244] = 0;
   out_6477212205675135460[245] = 0;
   out_6477212205675135460[246] = 0;
   out_6477212205675135460[247] = 0;
   out_6477212205675135460[248] = 0;
   out_6477212205675135460[249] = 0;
   out_6477212205675135460[250] = 0;
   out_6477212205675135460[251] = 0;
   out_6477212205675135460[252] = 0;
   out_6477212205675135460[253] = 0;
   out_6477212205675135460[254] = 0;
   out_6477212205675135460[255] = 0;
   out_6477212205675135460[256] = 0;
   out_6477212205675135460[257] = 0;
   out_6477212205675135460[258] = 0;
   out_6477212205675135460[259] = 0;
   out_6477212205675135460[260] = 0;
   out_6477212205675135460[261] = 0;
   out_6477212205675135460[262] = 0;
   out_6477212205675135460[263] = 1.0;
   out_6477212205675135460[264] = 0;
   out_6477212205675135460[265] = 0;
   out_6477212205675135460[266] = 0;
   out_6477212205675135460[267] = 0;
   out_6477212205675135460[268] = 0;
   out_6477212205675135460[269] = 0;
   out_6477212205675135460[270] = 0;
   out_6477212205675135460[271] = 0;
   out_6477212205675135460[272] = 0;
   out_6477212205675135460[273] = 0;
   out_6477212205675135460[274] = 0;
   out_6477212205675135460[275] = 0;
   out_6477212205675135460[276] = 0;
   out_6477212205675135460[277] = 0;
   out_6477212205675135460[278] = 0;
   out_6477212205675135460[279] = 0;
   out_6477212205675135460[280] = 0;
   out_6477212205675135460[281] = 0;
   out_6477212205675135460[282] = 0;
   out_6477212205675135460[283] = 0;
   out_6477212205675135460[284] = 0;
   out_6477212205675135460[285] = 1.0;
   out_6477212205675135460[286] = 0;
   out_6477212205675135460[287] = 0;
   out_6477212205675135460[288] = 0;
   out_6477212205675135460[289] = 0;
   out_6477212205675135460[290] = 0;
   out_6477212205675135460[291] = 0;
   out_6477212205675135460[292] = 0;
   out_6477212205675135460[293] = 0;
   out_6477212205675135460[294] = 0;
   out_6477212205675135460[295] = 0;
   out_6477212205675135460[296] = 0;
   out_6477212205675135460[297] = 0;
   out_6477212205675135460[298] = 0;
   out_6477212205675135460[299] = 0;
   out_6477212205675135460[300] = 0;
   out_6477212205675135460[301] = 0;
   out_6477212205675135460[302] = 0;
   out_6477212205675135460[303] = 0;
   out_6477212205675135460[304] = 0;
   out_6477212205675135460[305] = 0;
   out_6477212205675135460[306] = 0;
   out_6477212205675135460[307] = 1.0;
   out_6477212205675135460[308] = 0;
   out_6477212205675135460[309] = 0;
   out_6477212205675135460[310] = 0;
   out_6477212205675135460[311] = 0;
   out_6477212205675135460[312] = 0;
   out_6477212205675135460[313] = 0;
   out_6477212205675135460[314] = 0;
   out_6477212205675135460[315] = 0;
   out_6477212205675135460[316] = 0;
   out_6477212205675135460[317] = 0;
   out_6477212205675135460[318] = 0;
   out_6477212205675135460[319] = 0;
   out_6477212205675135460[320] = 0;
   out_6477212205675135460[321] = 0;
   out_6477212205675135460[322] = 0;
   out_6477212205675135460[323] = 0;
   out_6477212205675135460[324] = 0;
   out_6477212205675135460[325] = 0;
   out_6477212205675135460[326] = 0;
   out_6477212205675135460[327] = 0;
   out_6477212205675135460[328] = 0;
   out_6477212205675135460[329] = 1.0;
   out_6477212205675135460[330] = 0;
   out_6477212205675135460[331] = 0;
   out_6477212205675135460[332] = 0;
   out_6477212205675135460[333] = 0;
   out_6477212205675135460[334] = 0;
   out_6477212205675135460[335] = 0;
   out_6477212205675135460[336] = 0;
   out_6477212205675135460[337] = 0;
   out_6477212205675135460[338] = 0;
   out_6477212205675135460[339] = 0;
   out_6477212205675135460[340] = 0;
   out_6477212205675135460[341] = 0;
   out_6477212205675135460[342] = 0;
   out_6477212205675135460[343] = 0;
   out_6477212205675135460[344] = 0;
   out_6477212205675135460[345] = 0;
   out_6477212205675135460[346] = 0;
   out_6477212205675135460[347] = 0;
   out_6477212205675135460[348] = 0;
   out_6477212205675135460[349] = 0;
   out_6477212205675135460[350] = 0;
   out_6477212205675135460[351] = 1.0;
   out_6477212205675135460[352] = 0;
   out_6477212205675135460[353] = 0;
   out_6477212205675135460[354] = 0;
   out_6477212205675135460[355] = 0;
   out_6477212205675135460[356] = 0;
   out_6477212205675135460[357] = 0;
   out_6477212205675135460[358] = 0;
   out_6477212205675135460[359] = 0;
   out_6477212205675135460[360] = 0;
   out_6477212205675135460[361] = 0;
   out_6477212205675135460[362] = 0;
   out_6477212205675135460[363] = 0;
   out_6477212205675135460[364] = 0;
   out_6477212205675135460[365] = 0;
   out_6477212205675135460[366] = 0;
   out_6477212205675135460[367] = 0;
   out_6477212205675135460[368] = 0;
   out_6477212205675135460[369] = 0;
   out_6477212205675135460[370] = 0;
   out_6477212205675135460[371] = 0;
   out_6477212205675135460[372] = 0;
   out_6477212205675135460[373] = 1.0;
   out_6477212205675135460[374] = 0;
   out_6477212205675135460[375] = 0;
   out_6477212205675135460[376] = 0;
   out_6477212205675135460[377] = 0;
   out_6477212205675135460[378] = 0;
   out_6477212205675135460[379] = 0;
   out_6477212205675135460[380] = 0;
   out_6477212205675135460[381] = 0;
   out_6477212205675135460[382] = 0;
   out_6477212205675135460[383] = 0;
   out_6477212205675135460[384] = 0;
   out_6477212205675135460[385] = 0;
   out_6477212205675135460[386] = 0;
   out_6477212205675135460[387] = 0;
   out_6477212205675135460[388] = 0;
   out_6477212205675135460[389] = 0;
   out_6477212205675135460[390] = 0;
   out_6477212205675135460[391] = 0;
   out_6477212205675135460[392] = 0;
   out_6477212205675135460[393] = 0;
   out_6477212205675135460[394] = 0;
   out_6477212205675135460[395] = 1.0;
   out_6477212205675135460[396] = 0;
   out_6477212205675135460[397] = 0;
   out_6477212205675135460[398] = 0;
   out_6477212205675135460[399] = 0;
   out_6477212205675135460[400] = 0;
   out_6477212205675135460[401] = 0;
   out_6477212205675135460[402] = 0;
   out_6477212205675135460[403] = 0;
   out_6477212205675135460[404] = 0;
   out_6477212205675135460[405] = 0;
   out_6477212205675135460[406] = 0;
   out_6477212205675135460[407] = 0;
   out_6477212205675135460[408] = 0;
   out_6477212205675135460[409] = 0;
   out_6477212205675135460[410] = 0;
   out_6477212205675135460[411] = 0;
   out_6477212205675135460[412] = 0;
   out_6477212205675135460[413] = 0;
   out_6477212205675135460[414] = 0;
   out_6477212205675135460[415] = 0;
   out_6477212205675135460[416] = 0;
   out_6477212205675135460[417] = 1.0;
   out_6477212205675135460[418] = 0;
   out_6477212205675135460[419] = 0;
   out_6477212205675135460[420] = 0;
   out_6477212205675135460[421] = 0;
   out_6477212205675135460[422] = 0;
   out_6477212205675135460[423] = 0;
   out_6477212205675135460[424] = 0;
   out_6477212205675135460[425] = 0;
   out_6477212205675135460[426] = 0;
   out_6477212205675135460[427] = 0;
   out_6477212205675135460[428] = 0;
   out_6477212205675135460[429] = 0;
   out_6477212205675135460[430] = 0;
   out_6477212205675135460[431] = 0;
   out_6477212205675135460[432] = 0;
   out_6477212205675135460[433] = 0;
   out_6477212205675135460[434] = 0;
   out_6477212205675135460[435] = 0;
   out_6477212205675135460[436] = 0;
   out_6477212205675135460[437] = 0;
   out_6477212205675135460[438] = 0;
   out_6477212205675135460[439] = 1.0;
   out_6477212205675135460[440] = 0;
   out_6477212205675135460[441] = 0;
   out_6477212205675135460[442] = 0;
   out_6477212205675135460[443] = 0;
   out_6477212205675135460[444] = 0;
   out_6477212205675135460[445] = 0;
   out_6477212205675135460[446] = 0;
   out_6477212205675135460[447] = 0;
   out_6477212205675135460[448] = 0;
   out_6477212205675135460[449] = 0;
   out_6477212205675135460[450] = 0;
   out_6477212205675135460[451] = 0;
   out_6477212205675135460[452] = 0;
   out_6477212205675135460[453] = 0;
   out_6477212205675135460[454] = 0;
   out_6477212205675135460[455] = 0;
   out_6477212205675135460[456] = 0;
   out_6477212205675135460[457] = 0;
   out_6477212205675135460[458] = 0;
   out_6477212205675135460[459] = 0;
   out_6477212205675135460[460] = 0;
   out_6477212205675135460[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6834650672371603337) {
   out_6834650672371603337[0] = dt*state[7] + state[0];
   out_6834650672371603337[1] = dt*state[8] + state[1];
   out_6834650672371603337[2] = dt*state[9] + state[2];
   out_6834650672371603337[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6834650672371603337[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6834650672371603337[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6834650672371603337[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6834650672371603337[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6834650672371603337[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6834650672371603337[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6834650672371603337[10] = state[10];
   out_6834650672371603337[11] = state[11];
   out_6834650672371603337[12] = state[12];
   out_6834650672371603337[13] = state[13];
   out_6834650672371603337[14] = state[14];
   out_6834650672371603337[15] = state[15];
   out_6834650672371603337[16] = state[16];
   out_6834650672371603337[17] = state[17];
   out_6834650672371603337[18] = state[18];
   out_6834650672371603337[19] = state[19];
   out_6834650672371603337[20] = state[20];
   out_6834650672371603337[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5478108233600911700) {
   out_5478108233600911700[0] = 1;
   out_5478108233600911700[1] = 0;
   out_5478108233600911700[2] = 0;
   out_5478108233600911700[3] = 0;
   out_5478108233600911700[4] = 0;
   out_5478108233600911700[5] = 0;
   out_5478108233600911700[6] = dt;
   out_5478108233600911700[7] = 0;
   out_5478108233600911700[8] = 0;
   out_5478108233600911700[9] = 0;
   out_5478108233600911700[10] = 0;
   out_5478108233600911700[11] = 0;
   out_5478108233600911700[12] = 0;
   out_5478108233600911700[13] = 0;
   out_5478108233600911700[14] = 0;
   out_5478108233600911700[15] = 0;
   out_5478108233600911700[16] = 0;
   out_5478108233600911700[17] = 0;
   out_5478108233600911700[18] = 0;
   out_5478108233600911700[19] = 0;
   out_5478108233600911700[20] = 0;
   out_5478108233600911700[21] = 0;
   out_5478108233600911700[22] = 1;
   out_5478108233600911700[23] = 0;
   out_5478108233600911700[24] = 0;
   out_5478108233600911700[25] = 0;
   out_5478108233600911700[26] = 0;
   out_5478108233600911700[27] = 0;
   out_5478108233600911700[28] = dt;
   out_5478108233600911700[29] = 0;
   out_5478108233600911700[30] = 0;
   out_5478108233600911700[31] = 0;
   out_5478108233600911700[32] = 0;
   out_5478108233600911700[33] = 0;
   out_5478108233600911700[34] = 0;
   out_5478108233600911700[35] = 0;
   out_5478108233600911700[36] = 0;
   out_5478108233600911700[37] = 0;
   out_5478108233600911700[38] = 0;
   out_5478108233600911700[39] = 0;
   out_5478108233600911700[40] = 0;
   out_5478108233600911700[41] = 0;
   out_5478108233600911700[42] = 0;
   out_5478108233600911700[43] = 0;
   out_5478108233600911700[44] = 1;
   out_5478108233600911700[45] = 0;
   out_5478108233600911700[46] = 0;
   out_5478108233600911700[47] = 0;
   out_5478108233600911700[48] = 0;
   out_5478108233600911700[49] = 0;
   out_5478108233600911700[50] = dt;
   out_5478108233600911700[51] = 0;
   out_5478108233600911700[52] = 0;
   out_5478108233600911700[53] = 0;
   out_5478108233600911700[54] = 0;
   out_5478108233600911700[55] = 0;
   out_5478108233600911700[56] = 0;
   out_5478108233600911700[57] = 0;
   out_5478108233600911700[58] = 0;
   out_5478108233600911700[59] = 0;
   out_5478108233600911700[60] = 0;
   out_5478108233600911700[61] = 0;
   out_5478108233600911700[62] = 0;
   out_5478108233600911700[63] = 0;
   out_5478108233600911700[64] = 0;
   out_5478108233600911700[65] = 0;
   out_5478108233600911700[66] = 1;
   out_5478108233600911700[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5478108233600911700[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5478108233600911700[69] = 0;
   out_5478108233600911700[70] = 0;
   out_5478108233600911700[71] = 0;
   out_5478108233600911700[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5478108233600911700[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5478108233600911700[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5478108233600911700[75] = 0;
   out_5478108233600911700[76] = 0;
   out_5478108233600911700[77] = 0;
   out_5478108233600911700[78] = 0;
   out_5478108233600911700[79] = 0;
   out_5478108233600911700[80] = 0;
   out_5478108233600911700[81] = 0;
   out_5478108233600911700[82] = 0;
   out_5478108233600911700[83] = 0;
   out_5478108233600911700[84] = 0;
   out_5478108233600911700[85] = 0;
   out_5478108233600911700[86] = 0;
   out_5478108233600911700[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5478108233600911700[88] = 1;
   out_5478108233600911700[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5478108233600911700[90] = 0;
   out_5478108233600911700[91] = 0;
   out_5478108233600911700[92] = 0;
   out_5478108233600911700[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5478108233600911700[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5478108233600911700[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5478108233600911700[96] = 0;
   out_5478108233600911700[97] = 0;
   out_5478108233600911700[98] = 0;
   out_5478108233600911700[99] = 0;
   out_5478108233600911700[100] = 0;
   out_5478108233600911700[101] = 0;
   out_5478108233600911700[102] = 0;
   out_5478108233600911700[103] = 0;
   out_5478108233600911700[104] = 0;
   out_5478108233600911700[105] = 0;
   out_5478108233600911700[106] = 0;
   out_5478108233600911700[107] = 0;
   out_5478108233600911700[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5478108233600911700[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5478108233600911700[110] = 1;
   out_5478108233600911700[111] = 0;
   out_5478108233600911700[112] = 0;
   out_5478108233600911700[113] = 0;
   out_5478108233600911700[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5478108233600911700[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5478108233600911700[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5478108233600911700[117] = 0;
   out_5478108233600911700[118] = 0;
   out_5478108233600911700[119] = 0;
   out_5478108233600911700[120] = 0;
   out_5478108233600911700[121] = 0;
   out_5478108233600911700[122] = 0;
   out_5478108233600911700[123] = 0;
   out_5478108233600911700[124] = 0;
   out_5478108233600911700[125] = 0;
   out_5478108233600911700[126] = 0;
   out_5478108233600911700[127] = 0;
   out_5478108233600911700[128] = 0;
   out_5478108233600911700[129] = 0;
   out_5478108233600911700[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5478108233600911700[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5478108233600911700[132] = 1;
   out_5478108233600911700[133] = 0;
   out_5478108233600911700[134] = 0;
   out_5478108233600911700[135] = 0;
   out_5478108233600911700[136] = 0;
   out_5478108233600911700[137] = 0;
   out_5478108233600911700[138] = 0;
   out_5478108233600911700[139] = 0;
   out_5478108233600911700[140] = 0;
   out_5478108233600911700[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5478108233600911700[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5478108233600911700[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5478108233600911700[144] = 0;
   out_5478108233600911700[145] = 0;
   out_5478108233600911700[146] = 0;
   out_5478108233600911700[147] = 0;
   out_5478108233600911700[148] = 0;
   out_5478108233600911700[149] = 0;
   out_5478108233600911700[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5478108233600911700[151] = 0;
   out_5478108233600911700[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5478108233600911700[153] = 0;
   out_5478108233600911700[154] = 1;
   out_5478108233600911700[155] = 0;
   out_5478108233600911700[156] = 0;
   out_5478108233600911700[157] = 0;
   out_5478108233600911700[158] = 0;
   out_5478108233600911700[159] = 0;
   out_5478108233600911700[160] = 0;
   out_5478108233600911700[161] = 0;
   out_5478108233600911700[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5478108233600911700[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5478108233600911700[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5478108233600911700[165] = 0;
   out_5478108233600911700[166] = 0;
   out_5478108233600911700[167] = 0;
   out_5478108233600911700[168] = 0;
   out_5478108233600911700[169] = 0;
   out_5478108233600911700[170] = 0;
   out_5478108233600911700[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5478108233600911700[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5478108233600911700[173] = 0;
   out_5478108233600911700[174] = 0;
   out_5478108233600911700[175] = 0;
   out_5478108233600911700[176] = 1;
   out_5478108233600911700[177] = 0;
   out_5478108233600911700[178] = 0;
   out_5478108233600911700[179] = 0;
   out_5478108233600911700[180] = 0;
   out_5478108233600911700[181] = 0;
   out_5478108233600911700[182] = 0;
   out_5478108233600911700[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5478108233600911700[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5478108233600911700[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5478108233600911700[186] = 0;
   out_5478108233600911700[187] = 0;
   out_5478108233600911700[188] = 0;
   out_5478108233600911700[189] = 0;
   out_5478108233600911700[190] = 0;
   out_5478108233600911700[191] = 0;
   out_5478108233600911700[192] = 0;
   out_5478108233600911700[193] = 0;
   out_5478108233600911700[194] = 0;
   out_5478108233600911700[195] = 0;
   out_5478108233600911700[196] = 0;
   out_5478108233600911700[197] = 0;
   out_5478108233600911700[198] = 1;
   out_5478108233600911700[199] = 0;
   out_5478108233600911700[200] = 0;
   out_5478108233600911700[201] = 0;
   out_5478108233600911700[202] = 0;
   out_5478108233600911700[203] = 0;
   out_5478108233600911700[204] = 0;
   out_5478108233600911700[205] = 0;
   out_5478108233600911700[206] = 0;
   out_5478108233600911700[207] = 0;
   out_5478108233600911700[208] = 0;
   out_5478108233600911700[209] = 0;
   out_5478108233600911700[210] = 0;
   out_5478108233600911700[211] = 0;
   out_5478108233600911700[212] = 0;
   out_5478108233600911700[213] = 0;
   out_5478108233600911700[214] = 0;
   out_5478108233600911700[215] = 0;
   out_5478108233600911700[216] = 0;
   out_5478108233600911700[217] = 0;
   out_5478108233600911700[218] = 0;
   out_5478108233600911700[219] = 0;
   out_5478108233600911700[220] = 1;
   out_5478108233600911700[221] = 0;
   out_5478108233600911700[222] = 0;
   out_5478108233600911700[223] = 0;
   out_5478108233600911700[224] = 0;
   out_5478108233600911700[225] = 0;
   out_5478108233600911700[226] = 0;
   out_5478108233600911700[227] = 0;
   out_5478108233600911700[228] = 0;
   out_5478108233600911700[229] = 0;
   out_5478108233600911700[230] = 0;
   out_5478108233600911700[231] = 0;
   out_5478108233600911700[232] = 0;
   out_5478108233600911700[233] = 0;
   out_5478108233600911700[234] = 0;
   out_5478108233600911700[235] = 0;
   out_5478108233600911700[236] = 0;
   out_5478108233600911700[237] = 0;
   out_5478108233600911700[238] = 0;
   out_5478108233600911700[239] = 0;
   out_5478108233600911700[240] = 0;
   out_5478108233600911700[241] = 0;
   out_5478108233600911700[242] = 1;
   out_5478108233600911700[243] = 0;
   out_5478108233600911700[244] = 0;
   out_5478108233600911700[245] = 0;
   out_5478108233600911700[246] = 0;
   out_5478108233600911700[247] = 0;
   out_5478108233600911700[248] = 0;
   out_5478108233600911700[249] = 0;
   out_5478108233600911700[250] = 0;
   out_5478108233600911700[251] = 0;
   out_5478108233600911700[252] = 0;
   out_5478108233600911700[253] = 0;
   out_5478108233600911700[254] = 0;
   out_5478108233600911700[255] = 0;
   out_5478108233600911700[256] = 0;
   out_5478108233600911700[257] = 0;
   out_5478108233600911700[258] = 0;
   out_5478108233600911700[259] = 0;
   out_5478108233600911700[260] = 0;
   out_5478108233600911700[261] = 0;
   out_5478108233600911700[262] = 0;
   out_5478108233600911700[263] = 0;
   out_5478108233600911700[264] = 1;
   out_5478108233600911700[265] = 0;
   out_5478108233600911700[266] = 0;
   out_5478108233600911700[267] = 0;
   out_5478108233600911700[268] = 0;
   out_5478108233600911700[269] = 0;
   out_5478108233600911700[270] = 0;
   out_5478108233600911700[271] = 0;
   out_5478108233600911700[272] = 0;
   out_5478108233600911700[273] = 0;
   out_5478108233600911700[274] = 0;
   out_5478108233600911700[275] = 0;
   out_5478108233600911700[276] = 0;
   out_5478108233600911700[277] = 0;
   out_5478108233600911700[278] = 0;
   out_5478108233600911700[279] = 0;
   out_5478108233600911700[280] = 0;
   out_5478108233600911700[281] = 0;
   out_5478108233600911700[282] = 0;
   out_5478108233600911700[283] = 0;
   out_5478108233600911700[284] = 0;
   out_5478108233600911700[285] = 0;
   out_5478108233600911700[286] = 1;
   out_5478108233600911700[287] = 0;
   out_5478108233600911700[288] = 0;
   out_5478108233600911700[289] = 0;
   out_5478108233600911700[290] = 0;
   out_5478108233600911700[291] = 0;
   out_5478108233600911700[292] = 0;
   out_5478108233600911700[293] = 0;
   out_5478108233600911700[294] = 0;
   out_5478108233600911700[295] = 0;
   out_5478108233600911700[296] = 0;
   out_5478108233600911700[297] = 0;
   out_5478108233600911700[298] = 0;
   out_5478108233600911700[299] = 0;
   out_5478108233600911700[300] = 0;
   out_5478108233600911700[301] = 0;
   out_5478108233600911700[302] = 0;
   out_5478108233600911700[303] = 0;
   out_5478108233600911700[304] = 0;
   out_5478108233600911700[305] = 0;
   out_5478108233600911700[306] = 0;
   out_5478108233600911700[307] = 0;
   out_5478108233600911700[308] = 1;
   out_5478108233600911700[309] = 0;
   out_5478108233600911700[310] = 0;
   out_5478108233600911700[311] = 0;
   out_5478108233600911700[312] = 0;
   out_5478108233600911700[313] = 0;
   out_5478108233600911700[314] = 0;
   out_5478108233600911700[315] = 0;
   out_5478108233600911700[316] = 0;
   out_5478108233600911700[317] = 0;
   out_5478108233600911700[318] = 0;
   out_5478108233600911700[319] = 0;
   out_5478108233600911700[320] = 0;
   out_5478108233600911700[321] = 0;
   out_5478108233600911700[322] = 0;
   out_5478108233600911700[323] = 0;
   out_5478108233600911700[324] = 0;
   out_5478108233600911700[325] = 0;
   out_5478108233600911700[326] = 0;
   out_5478108233600911700[327] = 0;
   out_5478108233600911700[328] = 0;
   out_5478108233600911700[329] = 0;
   out_5478108233600911700[330] = 1;
   out_5478108233600911700[331] = 0;
   out_5478108233600911700[332] = 0;
   out_5478108233600911700[333] = 0;
   out_5478108233600911700[334] = 0;
   out_5478108233600911700[335] = 0;
   out_5478108233600911700[336] = 0;
   out_5478108233600911700[337] = 0;
   out_5478108233600911700[338] = 0;
   out_5478108233600911700[339] = 0;
   out_5478108233600911700[340] = 0;
   out_5478108233600911700[341] = 0;
   out_5478108233600911700[342] = 0;
   out_5478108233600911700[343] = 0;
   out_5478108233600911700[344] = 0;
   out_5478108233600911700[345] = 0;
   out_5478108233600911700[346] = 0;
   out_5478108233600911700[347] = 0;
   out_5478108233600911700[348] = 0;
   out_5478108233600911700[349] = 0;
   out_5478108233600911700[350] = 0;
   out_5478108233600911700[351] = 0;
   out_5478108233600911700[352] = 1;
   out_5478108233600911700[353] = 0;
   out_5478108233600911700[354] = 0;
   out_5478108233600911700[355] = 0;
   out_5478108233600911700[356] = 0;
   out_5478108233600911700[357] = 0;
   out_5478108233600911700[358] = 0;
   out_5478108233600911700[359] = 0;
   out_5478108233600911700[360] = 0;
   out_5478108233600911700[361] = 0;
   out_5478108233600911700[362] = 0;
   out_5478108233600911700[363] = 0;
   out_5478108233600911700[364] = 0;
   out_5478108233600911700[365] = 0;
   out_5478108233600911700[366] = 0;
   out_5478108233600911700[367] = 0;
   out_5478108233600911700[368] = 0;
   out_5478108233600911700[369] = 0;
   out_5478108233600911700[370] = 0;
   out_5478108233600911700[371] = 0;
   out_5478108233600911700[372] = 0;
   out_5478108233600911700[373] = 0;
   out_5478108233600911700[374] = 1;
   out_5478108233600911700[375] = 0;
   out_5478108233600911700[376] = 0;
   out_5478108233600911700[377] = 0;
   out_5478108233600911700[378] = 0;
   out_5478108233600911700[379] = 0;
   out_5478108233600911700[380] = 0;
   out_5478108233600911700[381] = 0;
   out_5478108233600911700[382] = 0;
   out_5478108233600911700[383] = 0;
   out_5478108233600911700[384] = 0;
   out_5478108233600911700[385] = 0;
   out_5478108233600911700[386] = 0;
   out_5478108233600911700[387] = 0;
   out_5478108233600911700[388] = 0;
   out_5478108233600911700[389] = 0;
   out_5478108233600911700[390] = 0;
   out_5478108233600911700[391] = 0;
   out_5478108233600911700[392] = 0;
   out_5478108233600911700[393] = 0;
   out_5478108233600911700[394] = 0;
   out_5478108233600911700[395] = 0;
   out_5478108233600911700[396] = 1;
   out_5478108233600911700[397] = 0;
   out_5478108233600911700[398] = 0;
   out_5478108233600911700[399] = 0;
   out_5478108233600911700[400] = 0;
   out_5478108233600911700[401] = 0;
   out_5478108233600911700[402] = 0;
   out_5478108233600911700[403] = 0;
   out_5478108233600911700[404] = 0;
   out_5478108233600911700[405] = 0;
   out_5478108233600911700[406] = 0;
   out_5478108233600911700[407] = 0;
   out_5478108233600911700[408] = 0;
   out_5478108233600911700[409] = 0;
   out_5478108233600911700[410] = 0;
   out_5478108233600911700[411] = 0;
   out_5478108233600911700[412] = 0;
   out_5478108233600911700[413] = 0;
   out_5478108233600911700[414] = 0;
   out_5478108233600911700[415] = 0;
   out_5478108233600911700[416] = 0;
   out_5478108233600911700[417] = 0;
   out_5478108233600911700[418] = 1;
   out_5478108233600911700[419] = 0;
   out_5478108233600911700[420] = 0;
   out_5478108233600911700[421] = 0;
   out_5478108233600911700[422] = 0;
   out_5478108233600911700[423] = 0;
   out_5478108233600911700[424] = 0;
   out_5478108233600911700[425] = 0;
   out_5478108233600911700[426] = 0;
   out_5478108233600911700[427] = 0;
   out_5478108233600911700[428] = 0;
   out_5478108233600911700[429] = 0;
   out_5478108233600911700[430] = 0;
   out_5478108233600911700[431] = 0;
   out_5478108233600911700[432] = 0;
   out_5478108233600911700[433] = 0;
   out_5478108233600911700[434] = 0;
   out_5478108233600911700[435] = 0;
   out_5478108233600911700[436] = 0;
   out_5478108233600911700[437] = 0;
   out_5478108233600911700[438] = 0;
   out_5478108233600911700[439] = 0;
   out_5478108233600911700[440] = 1;
}
void h_4(double *state, double *unused, double *out_7729241800317890539) {
   out_7729241800317890539[0] = state[10] + state[13];
   out_7729241800317890539[1] = state[11] + state[14];
   out_7729241800317890539[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5199473691953303502) {
   out_5199473691953303502[0] = 0;
   out_5199473691953303502[1] = 0;
   out_5199473691953303502[2] = 0;
   out_5199473691953303502[3] = 0;
   out_5199473691953303502[4] = 0;
   out_5199473691953303502[5] = 0;
   out_5199473691953303502[6] = 0;
   out_5199473691953303502[7] = 0;
   out_5199473691953303502[8] = 0;
   out_5199473691953303502[9] = 0;
   out_5199473691953303502[10] = 1;
   out_5199473691953303502[11] = 0;
   out_5199473691953303502[12] = 0;
   out_5199473691953303502[13] = 1;
   out_5199473691953303502[14] = 0;
   out_5199473691953303502[15] = 0;
   out_5199473691953303502[16] = 0;
   out_5199473691953303502[17] = 0;
   out_5199473691953303502[18] = 0;
   out_5199473691953303502[19] = 0;
   out_5199473691953303502[20] = 0;
   out_5199473691953303502[21] = 0;
   out_5199473691953303502[22] = 0;
   out_5199473691953303502[23] = 0;
   out_5199473691953303502[24] = 0;
   out_5199473691953303502[25] = 0;
   out_5199473691953303502[26] = 0;
   out_5199473691953303502[27] = 0;
   out_5199473691953303502[28] = 0;
   out_5199473691953303502[29] = 0;
   out_5199473691953303502[30] = 0;
   out_5199473691953303502[31] = 0;
   out_5199473691953303502[32] = 0;
   out_5199473691953303502[33] = 1;
   out_5199473691953303502[34] = 0;
   out_5199473691953303502[35] = 0;
   out_5199473691953303502[36] = 1;
   out_5199473691953303502[37] = 0;
   out_5199473691953303502[38] = 0;
   out_5199473691953303502[39] = 0;
   out_5199473691953303502[40] = 0;
   out_5199473691953303502[41] = 0;
   out_5199473691953303502[42] = 0;
   out_5199473691953303502[43] = 0;
   out_5199473691953303502[44] = 0;
   out_5199473691953303502[45] = 0;
   out_5199473691953303502[46] = 0;
   out_5199473691953303502[47] = 0;
   out_5199473691953303502[48] = 0;
   out_5199473691953303502[49] = 0;
   out_5199473691953303502[50] = 0;
   out_5199473691953303502[51] = 0;
   out_5199473691953303502[52] = 0;
   out_5199473691953303502[53] = 0;
   out_5199473691953303502[54] = 0;
   out_5199473691953303502[55] = 0;
   out_5199473691953303502[56] = 1;
   out_5199473691953303502[57] = 0;
   out_5199473691953303502[58] = 0;
   out_5199473691953303502[59] = 1;
   out_5199473691953303502[60] = 0;
   out_5199473691953303502[61] = 0;
   out_5199473691953303502[62] = 0;
   out_5199473691953303502[63] = 0;
   out_5199473691953303502[64] = 0;
   out_5199473691953303502[65] = 0;
}
void h_9(double *state, double *unused, double *out_5651445951659387245) {
   out_5651445951659387245[0] = state[10];
   out_5651445951659387245[1] = state[11];
   out_5651445951659387245[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4958284045323712857) {
   out_4958284045323712857[0] = 0;
   out_4958284045323712857[1] = 0;
   out_4958284045323712857[2] = 0;
   out_4958284045323712857[3] = 0;
   out_4958284045323712857[4] = 0;
   out_4958284045323712857[5] = 0;
   out_4958284045323712857[6] = 0;
   out_4958284045323712857[7] = 0;
   out_4958284045323712857[8] = 0;
   out_4958284045323712857[9] = 0;
   out_4958284045323712857[10] = 1;
   out_4958284045323712857[11] = 0;
   out_4958284045323712857[12] = 0;
   out_4958284045323712857[13] = 0;
   out_4958284045323712857[14] = 0;
   out_4958284045323712857[15] = 0;
   out_4958284045323712857[16] = 0;
   out_4958284045323712857[17] = 0;
   out_4958284045323712857[18] = 0;
   out_4958284045323712857[19] = 0;
   out_4958284045323712857[20] = 0;
   out_4958284045323712857[21] = 0;
   out_4958284045323712857[22] = 0;
   out_4958284045323712857[23] = 0;
   out_4958284045323712857[24] = 0;
   out_4958284045323712857[25] = 0;
   out_4958284045323712857[26] = 0;
   out_4958284045323712857[27] = 0;
   out_4958284045323712857[28] = 0;
   out_4958284045323712857[29] = 0;
   out_4958284045323712857[30] = 0;
   out_4958284045323712857[31] = 0;
   out_4958284045323712857[32] = 0;
   out_4958284045323712857[33] = 1;
   out_4958284045323712857[34] = 0;
   out_4958284045323712857[35] = 0;
   out_4958284045323712857[36] = 0;
   out_4958284045323712857[37] = 0;
   out_4958284045323712857[38] = 0;
   out_4958284045323712857[39] = 0;
   out_4958284045323712857[40] = 0;
   out_4958284045323712857[41] = 0;
   out_4958284045323712857[42] = 0;
   out_4958284045323712857[43] = 0;
   out_4958284045323712857[44] = 0;
   out_4958284045323712857[45] = 0;
   out_4958284045323712857[46] = 0;
   out_4958284045323712857[47] = 0;
   out_4958284045323712857[48] = 0;
   out_4958284045323712857[49] = 0;
   out_4958284045323712857[50] = 0;
   out_4958284045323712857[51] = 0;
   out_4958284045323712857[52] = 0;
   out_4958284045323712857[53] = 0;
   out_4958284045323712857[54] = 0;
   out_4958284045323712857[55] = 0;
   out_4958284045323712857[56] = 1;
   out_4958284045323712857[57] = 0;
   out_4958284045323712857[58] = 0;
   out_4958284045323712857[59] = 0;
   out_4958284045323712857[60] = 0;
   out_4958284045323712857[61] = 0;
   out_4958284045323712857[62] = 0;
   out_4958284045323712857[63] = 0;
   out_4958284045323712857[64] = 0;
   out_4958284045323712857[65] = 0;
}
void h_10(double *state, double *unused, double *out_6193925307380695013) {
   out_6193925307380695013[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6193925307380695013[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6193925307380695013[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_9161549963754530533) {
   out_9161549963754530533[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9161549963754530533[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_9161549963754530533[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_9161549963754530533[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9161549963754530533[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9161549963754530533[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9161549963754530533[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9161549963754530533[7] = 0;
   out_9161549963754530533[8] = 0;
   out_9161549963754530533[9] = 0;
   out_9161549963754530533[10] = 0;
   out_9161549963754530533[11] = 0;
   out_9161549963754530533[12] = 0;
   out_9161549963754530533[13] = 0;
   out_9161549963754530533[14] = 0;
   out_9161549963754530533[15] = 0;
   out_9161549963754530533[16] = 1;
   out_9161549963754530533[17] = 0;
   out_9161549963754530533[18] = 0;
   out_9161549963754530533[19] = 1;
   out_9161549963754530533[20] = 0;
   out_9161549963754530533[21] = 0;
   out_9161549963754530533[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_9161549963754530533[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9161549963754530533[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_9161549963754530533[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9161549963754530533[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9161549963754530533[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9161549963754530533[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9161549963754530533[29] = 0;
   out_9161549963754530533[30] = 0;
   out_9161549963754530533[31] = 0;
   out_9161549963754530533[32] = 0;
   out_9161549963754530533[33] = 0;
   out_9161549963754530533[34] = 0;
   out_9161549963754530533[35] = 0;
   out_9161549963754530533[36] = 0;
   out_9161549963754530533[37] = 0;
   out_9161549963754530533[38] = 0;
   out_9161549963754530533[39] = 1;
   out_9161549963754530533[40] = 0;
   out_9161549963754530533[41] = 0;
   out_9161549963754530533[42] = 1;
   out_9161549963754530533[43] = 0;
   out_9161549963754530533[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_9161549963754530533[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_9161549963754530533[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9161549963754530533[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9161549963754530533[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9161549963754530533[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9161549963754530533[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9161549963754530533[51] = 0;
   out_9161549963754530533[52] = 0;
   out_9161549963754530533[53] = 0;
   out_9161549963754530533[54] = 0;
   out_9161549963754530533[55] = 0;
   out_9161549963754530533[56] = 0;
   out_9161549963754530533[57] = 0;
   out_9161549963754530533[58] = 0;
   out_9161549963754530533[59] = 0;
   out_9161549963754530533[60] = 0;
   out_9161549963754530533[61] = 0;
   out_9161549963754530533[62] = 1;
   out_9161549963754530533[63] = 0;
   out_9161549963754530533[64] = 0;
   out_9161549963754530533[65] = 1;
}
void h_12(double *state, double *unused, double *out_8203641853388437577) {
   out_8203641853388437577[0] = state[0];
   out_8203641853388437577[1] = state[1];
   out_8203641853388437577[2] = state[2];
}
void H_12(double *state, double *unused, double *out_180017283921341707) {
   out_180017283921341707[0] = 1;
   out_180017283921341707[1] = 0;
   out_180017283921341707[2] = 0;
   out_180017283921341707[3] = 0;
   out_180017283921341707[4] = 0;
   out_180017283921341707[5] = 0;
   out_180017283921341707[6] = 0;
   out_180017283921341707[7] = 0;
   out_180017283921341707[8] = 0;
   out_180017283921341707[9] = 0;
   out_180017283921341707[10] = 0;
   out_180017283921341707[11] = 0;
   out_180017283921341707[12] = 0;
   out_180017283921341707[13] = 0;
   out_180017283921341707[14] = 0;
   out_180017283921341707[15] = 0;
   out_180017283921341707[16] = 0;
   out_180017283921341707[17] = 0;
   out_180017283921341707[18] = 0;
   out_180017283921341707[19] = 0;
   out_180017283921341707[20] = 0;
   out_180017283921341707[21] = 0;
   out_180017283921341707[22] = 0;
   out_180017283921341707[23] = 1;
   out_180017283921341707[24] = 0;
   out_180017283921341707[25] = 0;
   out_180017283921341707[26] = 0;
   out_180017283921341707[27] = 0;
   out_180017283921341707[28] = 0;
   out_180017283921341707[29] = 0;
   out_180017283921341707[30] = 0;
   out_180017283921341707[31] = 0;
   out_180017283921341707[32] = 0;
   out_180017283921341707[33] = 0;
   out_180017283921341707[34] = 0;
   out_180017283921341707[35] = 0;
   out_180017283921341707[36] = 0;
   out_180017283921341707[37] = 0;
   out_180017283921341707[38] = 0;
   out_180017283921341707[39] = 0;
   out_180017283921341707[40] = 0;
   out_180017283921341707[41] = 0;
   out_180017283921341707[42] = 0;
   out_180017283921341707[43] = 0;
   out_180017283921341707[44] = 0;
   out_180017283921341707[45] = 0;
   out_180017283921341707[46] = 1;
   out_180017283921341707[47] = 0;
   out_180017283921341707[48] = 0;
   out_180017283921341707[49] = 0;
   out_180017283921341707[50] = 0;
   out_180017283921341707[51] = 0;
   out_180017283921341707[52] = 0;
   out_180017283921341707[53] = 0;
   out_180017283921341707[54] = 0;
   out_180017283921341707[55] = 0;
   out_180017283921341707[56] = 0;
   out_180017283921341707[57] = 0;
   out_180017283921341707[58] = 0;
   out_180017283921341707[59] = 0;
   out_180017283921341707[60] = 0;
   out_180017283921341707[61] = 0;
   out_180017283921341707[62] = 0;
   out_180017283921341707[63] = 0;
   out_180017283921341707[64] = 0;
   out_180017283921341707[65] = 0;
}
void h_35(double *state, double *unused, double *out_4000488817324217692) {
   out_4000488817324217692[0] = state[7];
   out_4000488817324217692[1] = state[8];
   out_4000488817324217692[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2565545748403672002) {
   out_2565545748403672002[0] = 0;
   out_2565545748403672002[1] = 0;
   out_2565545748403672002[2] = 0;
   out_2565545748403672002[3] = 0;
   out_2565545748403672002[4] = 0;
   out_2565545748403672002[5] = 0;
   out_2565545748403672002[6] = 0;
   out_2565545748403672002[7] = 1;
   out_2565545748403672002[8] = 0;
   out_2565545748403672002[9] = 0;
   out_2565545748403672002[10] = 0;
   out_2565545748403672002[11] = 0;
   out_2565545748403672002[12] = 0;
   out_2565545748403672002[13] = 0;
   out_2565545748403672002[14] = 0;
   out_2565545748403672002[15] = 0;
   out_2565545748403672002[16] = 0;
   out_2565545748403672002[17] = 0;
   out_2565545748403672002[18] = 0;
   out_2565545748403672002[19] = 0;
   out_2565545748403672002[20] = 0;
   out_2565545748403672002[21] = 0;
   out_2565545748403672002[22] = 0;
   out_2565545748403672002[23] = 0;
   out_2565545748403672002[24] = 0;
   out_2565545748403672002[25] = 0;
   out_2565545748403672002[26] = 0;
   out_2565545748403672002[27] = 0;
   out_2565545748403672002[28] = 0;
   out_2565545748403672002[29] = 0;
   out_2565545748403672002[30] = 1;
   out_2565545748403672002[31] = 0;
   out_2565545748403672002[32] = 0;
   out_2565545748403672002[33] = 0;
   out_2565545748403672002[34] = 0;
   out_2565545748403672002[35] = 0;
   out_2565545748403672002[36] = 0;
   out_2565545748403672002[37] = 0;
   out_2565545748403672002[38] = 0;
   out_2565545748403672002[39] = 0;
   out_2565545748403672002[40] = 0;
   out_2565545748403672002[41] = 0;
   out_2565545748403672002[42] = 0;
   out_2565545748403672002[43] = 0;
   out_2565545748403672002[44] = 0;
   out_2565545748403672002[45] = 0;
   out_2565545748403672002[46] = 0;
   out_2565545748403672002[47] = 0;
   out_2565545748403672002[48] = 0;
   out_2565545748403672002[49] = 0;
   out_2565545748403672002[50] = 0;
   out_2565545748403672002[51] = 0;
   out_2565545748403672002[52] = 0;
   out_2565545748403672002[53] = 1;
   out_2565545748403672002[54] = 0;
   out_2565545748403672002[55] = 0;
   out_2565545748403672002[56] = 0;
   out_2565545748403672002[57] = 0;
   out_2565545748403672002[58] = 0;
   out_2565545748403672002[59] = 0;
   out_2565545748403672002[60] = 0;
   out_2565545748403672002[61] = 0;
   out_2565545748403672002[62] = 0;
   out_2565545748403672002[63] = 0;
   out_2565545748403672002[64] = 0;
   out_2565545748403672002[65] = 0;
}
void h_32(double *state, double *unused, double *out_8660119988636660788) {
   out_8660119988636660788[0] = state[3];
   out_8660119988636660788[1] = state[4];
   out_8660119988636660788[2] = state[5];
   out_8660119988636660788[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3477651144291595728) {
   out_3477651144291595728[0] = 0;
   out_3477651144291595728[1] = 0;
   out_3477651144291595728[2] = 0;
   out_3477651144291595728[3] = 1;
   out_3477651144291595728[4] = 0;
   out_3477651144291595728[5] = 0;
   out_3477651144291595728[6] = 0;
   out_3477651144291595728[7] = 0;
   out_3477651144291595728[8] = 0;
   out_3477651144291595728[9] = 0;
   out_3477651144291595728[10] = 0;
   out_3477651144291595728[11] = 0;
   out_3477651144291595728[12] = 0;
   out_3477651144291595728[13] = 0;
   out_3477651144291595728[14] = 0;
   out_3477651144291595728[15] = 0;
   out_3477651144291595728[16] = 0;
   out_3477651144291595728[17] = 0;
   out_3477651144291595728[18] = 0;
   out_3477651144291595728[19] = 0;
   out_3477651144291595728[20] = 0;
   out_3477651144291595728[21] = 0;
   out_3477651144291595728[22] = 0;
   out_3477651144291595728[23] = 0;
   out_3477651144291595728[24] = 0;
   out_3477651144291595728[25] = 0;
   out_3477651144291595728[26] = 1;
   out_3477651144291595728[27] = 0;
   out_3477651144291595728[28] = 0;
   out_3477651144291595728[29] = 0;
   out_3477651144291595728[30] = 0;
   out_3477651144291595728[31] = 0;
   out_3477651144291595728[32] = 0;
   out_3477651144291595728[33] = 0;
   out_3477651144291595728[34] = 0;
   out_3477651144291595728[35] = 0;
   out_3477651144291595728[36] = 0;
   out_3477651144291595728[37] = 0;
   out_3477651144291595728[38] = 0;
   out_3477651144291595728[39] = 0;
   out_3477651144291595728[40] = 0;
   out_3477651144291595728[41] = 0;
   out_3477651144291595728[42] = 0;
   out_3477651144291595728[43] = 0;
   out_3477651144291595728[44] = 0;
   out_3477651144291595728[45] = 0;
   out_3477651144291595728[46] = 0;
   out_3477651144291595728[47] = 0;
   out_3477651144291595728[48] = 0;
   out_3477651144291595728[49] = 1;
   out_3477651144291595728[50] = 0;
   out_3477651144291595728[51] = 0;
   out_3477651144291595728[52] = 0;
   out_3477651144291595728[53] = 0;
   out_3477651144291595728[54] = 0;
   out_3477651144291595728[55] = 0;
   out_3477651144291595728[56] = 0;
   out_3477651144291595728[57] = 0;
   out_3477651144291595728[58] = 0;
   out_3477651144291595728[59] = 0;
   out_3477651144291595728[60] = 0;
   out_3477651144291595728[61] = 0;
   out_3477651144291595728[62] = 0;
   out_3477651144291595728[63] = 0;
   out_3477651144291595728[64] = 0;
   out_3477651144291595728[65] = 0;
   out_3477651144291595728[66] = 0;
   out_3477651144291595728[67] = 0;
   out_3477651144291595728[68] = 0;
   out_3477651144291595728[69] = 0;
   out_3477651144291595728[70] = 0;
   out_3477651144291595728[71] = 0;
   out_3477651144291595728[72] = 1;
   out_3477651144291595728[73] = 0;
   out_3477651144291595728[74] = 0;
   out_3477651144291595728[75] = 0;
   out_3477651144291595728[76] = 0;
   out_3477651144291595728[77] = 0;
   out_3477651144291595728[78] = 0;
   out_3477651144291595728[79] = 0;
   out_3477651144291595728[80] = 0;
   out_3477651144291595728[81] = 0;
   out_3477651144291595728[82] = 0;
   out_3477651144291595728[83] = 0;
   out_3477651144291595728[84] = 0;
   out_3477651144291595728[85] = 0;
   out_3477651144291595728[86] = 0;
   out_3477651144291595728[87] = 0;
}
void h_13(double *state, double *unused, double *out_3567048378260979633) {
   out_3567048378260979633[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3567048378260979633[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3567048378260979633[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8054277663346687055) {
   out_8054277663346687055[0] = 0;
   out_8054277663346687055[1] = 0;
   out_8054277663346687055[2] = 0;
   out_8054277663346687055[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8054277663346687055[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8054277663346687055[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8054277663346687055[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8054277663346687055[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8054277663346687055[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8054277663346687055[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8054277663346687055[10] = 0;
   out_8054277663346687055[11] = 0;
   out_8054277663346687055[12] = 0;
   out_8054277663346687055[13] = 0;
   out_8054277663346687055[14] = 0;
   out_8054277663346687055[15] = 0;
   out_8054277663346687055[16] = 0;
   out_8054277663346687055[17] = 0;
   out_8054277663346687055[18] = 0;
   out_8054277663346687055[19] = 0;
   out_8054277663346687055[20] = 0;
   out_8054277663346687055[21] = 0;
   out_8054277663346687055[22] = 0;
   out_8054277663346687055[23] = 0;
   out_8054277663346687055[24] = 0;
   out_8054277663346687055[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8054277663346687055[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8054277663346687055[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8054277663346687055[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8054277663346687055[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8054277663346687055[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8054277663346687055[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8054277663346687055[32] = 0;
   out_8054277663346687055[33] = 0;
   out_8054277663346687055[34] = 0;
   out_8054277663346687055[35] = 0;
   out_8054277663346687055[36] = 0;
   out_8054277663346687055[37] = 0;
   out_8054277663346687055[38] = 0;
   out_8054277663346687055[39] = 0;
   out_8054277663346687055[40] = 0;
   out_8054277663346687055[41] = 0;
   out_8054277663346687055[42] = 0;
   out_8054277663346687055[43] = 0;
   out_8054277663346687055[44] = 0;
   out_8054277663346687055[45] = 0;
   out_8054277663346687055[46] = 0;
   out_8054277663346687055[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8054277663346687055[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8054277663346687055[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8054277663346687055[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8054277663346687055[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8054277663346687055[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8054277663346687055[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8054277663346687055[54] = 0;
   out_8054277663346687055[55] = 0;
   out_8054277663346687055[56] = 0;
   out_8054277663346687055[57] = 0;
   out_8054277663346687055[58] = 0;
   out_8054277663346687055[59] = 0;
   out_8054277663346687055[60] = 0;
   out_8054277663346687055[61] = 0;
   out_8054277663346687055[62] = 0;
   out_8054277663346687055[63] = 0;
   out_8054277663346687055[64] = 0;
   out_8054277663346687055[65] = 0;
}
void h_14(double *state, double *unused, double *out_5651445951659387245) {
   out_5651445951659387245[0] = state[10];
   out_5651445951659387245[1] = state[11];
   out_5651445951659387245[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4958284045323712857) {
   out_4958284045323712857[0] = 0;
   out_4958284045323712857[1] = 0;
   out_4958284045323712857[2] = 0;
   out_4958284045323712857[3] = 0;
   out_4958284045323712857[4] = 0;
   out_4958284045323712857[5] = 0;
   out_4958284045323712857[6] = 0;
   out_4958284045323712857[7] = 0;
   out_4958284045323712857[8] = 0;
   out_4958284045323712857[9] = 0;
   out_4958284045323712857[10] = 1;
   out_4958284045323712857[11] = 0;
   out_4958284045323712857[12] = 0;
   out_4958284045323712857[13] = 0;
   out_4958284045323712857[14] = 0;
   out_4958284045323712857[15] = 0;
   out_4958284045323712857[16] = 0;
   out_4958284045323712857[17] = 0;
   out_4958284045323712857[18] = 0;
   out_4958284045323712857[19] = 0;
   out_4958284045323712857[20] = 0;
   out_4958284045323712857[21] = 0;
   out_4958284045323712857[22] = 0;
   out_4958284045323712857[23] = 0;
   out_4958284045323712857[24] = 0;
   out_4958284045323712857[25] = 0;
   out_4958284045323712857[26] = 0;
   out_4958284045323712857[27] = 0;
   out_4958284045323712857[28] = 0;
   out_4958284045323712857[29] = 0;
   out_4958284045323712857[30] = 0;
   out_4958284045323712857[31] = 0;
   out_4958284045323712857[32] = 0;
   out_4958284045323712857[33] = 1;
   out_4958284045323712857[34] = 0;
   out_4958284045323712857[35] = 0;
   out_4958284045323712857[36] = 0;
   out_4958284045323712857[37] = 0;
   out_4958284045323712857[38] = 0;
   out_4958284045323712857[39] = 0;
   out_4958284045323712857[40] = 0;
   out_4958284045323712857[41] = 0;
   out_4958284045323712857[42] = 0;
   out_4958284045323712857[43] = 0;
   out_4958284045323712857[44] = 0;
   out_4958284045323712857[45] = 0;
   out_4958284045323712857[46] = 0;
   out_4958284045323712857[47] = 0;
   out_4958284045323712857[48] = 0;
   out_4958284045323712857[49] = 0;
   out_4958284045323712857[50] = 0;
   out_4958284045323712857[51] = 0;
   out_4958284045323712857[52] = 0;
   out_4958284045323712857[53] = 0;
   out_4958284045323712857[54] = 0;
   out_4958284045323712857[55] = 0;
   out_4958284045323712857[56] = 1;
   out_4958284045323712857[57] = 0;
   out_4958284045323712857[58] = 0;
   out_4958284045323712857[59] = 0;
   out_4958284045323712857[60] = 0;
   out_4958284045323712857[61] = 0;
   out_4958284045323712857[62] = 0;
   out_4958284045323712857[63] = 0;
   out_4958284045323712857[64] = 0;
   out_4958284045323712857[65] = 0;
}
void h_33(double *state, double *unused, double *out_2337059077647592131) {
   out_2337059077647592131[0] = state[16];
   out_2337059077647592131[1] = state[17];
   out_2337059077647592131[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1317745370058161478) {
   out_1317745370058161478[0] = 0;
   out_1317745370058161478[1] = 0;
   out_1317745370058161478[2] = 0;
   out_1317745370058161478[3] = 0;
   out_1317745370058161478[4] = 0;
   out_1317745370058161478[5] = 0;
   out_1317745370058161478[6] = 0;
   out_1317745370058161478[7] = 0;
   out_1317745370058161478[8] = 0;
   out_1317745370058161478[9] = 0;
   out_1317745370058161478[10] = 0;
   out_1317745370058161478[11] = 0;
   out_1317745370058161478[12] = 0;
   out_1317745370058161478[13] = 0;
   out_1317745370058161478[14] = 0;
   out_1317745370058161478[15] = 0;
   out_1317745370058161478[16] = 1;
   out_1317745370058161478[17] = 0;
   out_1317745370058161478[18] = 0;
   out_1317745370058161478[19] = 0;
   out_1317745370058161478[20] = 0;
   out_1317745370058161478[21] = 0;
   out_1317745370058161478[22] = 0;
   out_1317745370058161478[23] = 0;
   out_1317745370058161478[24] = 0;
   out_1317745370058161478[25] = 0;
   out_1317745370058161478[26] = 0;
   out_1317745370058161478[27] = 0;
   out_1317745370058161478[28] = 0;
   out_1317745370058161478[29] = 0;
   out_1317745370058161478[30] = 0;
   out_1317745370058161478[31] = 0;
   out_1317745370058161478[32] = 0;
   out_1317745370058161478[33] = 0;
   out_1317745370058161478[34] = 0;
   out_1317745370058161478[35] = 0;
   out_1317745370058161478[36] = 0;
   out_1317745370058161478[37] = 0;
   out_1317745370058161478[38] = 0;
   out_1317745370058161478[39] = 1;
   out_1317745370058161478[40] = 0;
   out_1317745370058161478[41] = 0;
   out_1317745370058161478[42] = 0;
   out_1317745370058161478[43] = 0;
   out_1317745370058161478[44] = 0;
   out_1317745370058161478[45] = 0;
   out_1317745370058161478[46] = 0;
   out_1317745370058161478[47] = 0;
   out_1317745370058161478[48] = 0;
   out_1317745370058161478[49] = 0;
   out_1317745370058161478[50] = 0;
   out_1317745370058161478[51] = 0;
   out_1317745370058161478[52] = 0;
   out_1317745370058161478[53] = 0;
   out_1317745370058161478[54] = 0;
   out_1317745370058161478[55] = 0;
   out_1317745370058161478[56] = 0;
   out_1317745370058161478[57] = 0;
   out_1317745370058161478[58] = 0;
   out_1317745370058161478[59] = 0;
   out_1317745370058161478[60] = 0;
   out_1317745370058161478[61] = 0;
   out_1317745370058161478[62] = 1;
   out_1317745370058161478[63] = 0;
   out_1317745370058161478[64] = 0;
   out_1317745370058161478[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3969893128517011236) {
  H(in_vec, out_3969893128517011236);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1006419718300617568) {
  err_fun(nom_x, delta_x, out_1006419718300617568);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8817840190981899676) {
  inv_err_fun(nom_x, true_x, out_8817840190981899676);
}
void live_H_mod_fun(double *state, double *out_6477212205675135460) {
  H_mod_fun(state, out_6477212205675135460);
}
void live_f_fun(double *state, double dt, double *out_6834650672371603337) {
  f_fun(state,  dt, out_6834650672371603337);
}
void live_F_fun(double *state, double dt, double *out_5478108233600911700) {
  F_fun(state,  dt, out_5478108233600911700);
}
void live_h_4(double *state, double *unused, double *out_7729241800317890539) {
  h_4(state, unused, out_7729241800317890539);
}
void live_H_4(double *state, double *unused, double *out_5199473691953303502) {
  H_4(state, unused, out_5199473691953303502);
}
void live_h_9(double *state, double *unused, double *out_5651445951659387245) {
  h_9(state, unused, out_5651445951659387245);
}
void live_H_9(double *state, double *unused, double *out_4958284045323712857) {
  H_9(state, unused, out_4958284045323712857);
}
void live_h_10(double *state, double *unused, double *out_6193925307380695013) {
  h_10(state, unused, out_6193925307380695013);
}
void live_H_10(double *state, double *unused, double *out_9161549963754530533) {
  H_10(state, unused, out_9161549963754530533);
}
void live_h_12(double *state, double *unused, double *out_8203641853388437577) {
  h_12(state, unused, out_8203641853388437577);
}
void live_H_12(double *state, double *unused, double *out_180017283921341707) {
  H_12(state, unused, out_180017283921341707);
}
void live_h_35(double *state, double *unused, double *out_4000488817324217692) {
  h_35(state, unused, out_4000488817324217692);
}
void live_H_35(double *state, double *unused, double *out_2565545748403672002) {
  H_35(state, unused, out_2565545748403672002);
}
void live_h_32(double *state, double *unused, double *out_8660119988636660788) {
  h_32(state, unused, out_8660119988636660788);
}
void live_H_32(double *state, double *unused, double *out_3477651144291595728) {
  H_32(state, unused, out_3477651144291595728);
}
void live_h_13(double *state, double *unused, double *out_3567048378260979633) {
  h_13(state, unused, out_3567048378260979633);
}
void live_H_13(double *state, double *unused, double *out_8054277663346687055) {
  H_13(state, unused, out_8054277663346687055);
}
void live_h_14(double *state, double *unused, double *out_5651445951659387245) {
  h_14(state, unused, out_5651445951659387245);
}
void live_H_14(double *state, double *unused, double *out_4958284045323712857) {
  H_14(state, unused, out_4958284045323712857);
}
void live_h_33(double *state, double *unused, double *out_2337059077647592131) {
  h_33(state, unused, out_2337059077647592131);
}
void live_H_33(double *state, double *unused, double *out_1317745370058161478) {
  H_33(state, unused, out_1317745370058161478);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
